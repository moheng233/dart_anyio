// ignore_for_file: lines_longer_than_80_chars test cases

import 'package:anyio_modbus_slave/modbus_slave.dart';

typedef RequestTestCases = ({List<int> raw, ModbusFrameRequest frame});
typedef ResponseTestCases = ({List<int> raw, ModbusFrameResponse frame});

const resquesTestCasesList = <RequestTestCases>[
  (
    // dart format off
    raw: [0x00,0x05,0x00,0x00,0x00,0x06,0x01,0x03,0x00,0x00,0x00,0x0A], 
    // dart format on
    frame: ModbusFrameRequest.readHoldingRegisters(5, 1, 0, 10),
  ),
  (
    // dart format off
    raw: [0x00,0x46,0x00,0x00,0x00,0x06,0x01,0x06,0x00,0x03,0x00,0x05],
    // dart format on
    frame: ModbusFrameRequest.writeSingleRegister(0x46, 1, 3, 5),
  ),
];

const responseTestCasesList = <ResponseTestCases>[
  (
    // dart format off
    raw: [0x00,0x05,0x00,0x00,0x00,0x17,0x01,0x03,0x14,0x00,0x00,0x00,0x01,0x00,0x02,0x00,0x03,0x00,0x04,0x00,0x05,0x00,0x06,0x00,0x07,0x00,0x08,0x00,0x09], 
    frame: ModbusFrameResponse.readHoldingRegisters(5,1,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]),
    // dart format on
  ),
  (
    // dart format off
    raw: [0x00,0x46,0x00,0x00,0x00,0x06,0x01,0x06,0x00,0x03,0x00,0x05],
    // dart format on
    frame: ModbusFrameResponse.writeSingleRegister(0x46, 1, 3, 5),
  ),
];
